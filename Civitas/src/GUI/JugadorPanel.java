/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import civitas.CasillaCalle;
import civitas.Jugador;
import java.util.ArrayList;

/**
 *
 * @author valentino
 */
public class JugadorPanel extends javax.swing.JPanel {

    
    Jugador jugador;
    
    /**
     * Creates new form JugadorPanel
     */
    public JugadorPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        moneyField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        basedField = new javax.swing.JTextField();
        propiedadesPanel = new javax.swing.JPanel();
        propiedadPanel2 = new GUI.PropiedadPanel();

        jLabel1.setText("Nombre:");
        jLabel1.setToolTipText("");
        add(jLabel1);

        nameField.setEditable(false);
        nameField.setText("playerName");
        add(nameField);

        jLabel2.setText("Saldo:");
        add(jLabel2);

        moneyField.setEditable(false);
        moneyField.setText("playerMoney");
        add(moneyField);

        jLabel3.setText("¿Especulador?");
        add(jLabel3);

        basedField.setEditable(false);
        basedField.setText("playerIsBased");
        basedField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basedFieldActionPerformed(evt);
            }
        });
        add(basedField);
        add(propiedadesPanel);
        add(propiedadPanel2);
    }// </editor-fold>//GEN-END:initComponents

    private void basedFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basedFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_basedFieldActionPerformed

    void setJugador(Jugador playa)
    {
        this.nameField.setText(playa.getNombre());
        this.moneyField.setText(String.valueOf(playa.getSaldo()));
        this.basedField.setText(playa.getEspeculador());
        
        this.rellenaPropiedades(playa.getPropiedades());
        repaint();
    }
    
    private void rellenaPropiedades(ArrayList<CasillaCalle> lista)
    {
        // Se elimina la información antigua
        propiedadesPanel.removeAll();
        // Se recorre la lista de propiedades para ir creando sus vistas individuales y añadirlas al panel
        for (CasillaCalle t : lista) 
        {
            PropiedadPanel vistaPropiedad = new PropiedadPanel();
            vistaPropiedad.setPropiedad(t);
            propiedadesPanel.add(vistaPropiedad);
            vistaPropiedad.setVisible(true);
        }
        
        repaint();
        revalidate();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basedField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField moneyField;
    private javax.swing.JTextField nameField;
    private GUI.PropiedadPanel propiedadPanel2;
    private javax.swing.JPanel propiedadesPanel;
    // End of variables declaration//GEN-END:variables
}
